{
  "name": "mongo-live",
  "version": "0.1.0",
  "description": "Listening to MongoDB live changes using oplog",
  "author": {
    "name": "Jonathan Brumley",
    "email": "cayasso@gmail.com"
  },
  "homepage": "https://github.com/cayasso/mongo-live",
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/cayasso/mongo-live.git"
  },
  "keywords": [
    "query",
    "data",
    "mongo",
    "mongodb",
    "watcher",
    "mongo live",
    "live",
    "oplog"
  ],
  "license": "MIT",
  "dependencies": {
    "mongo-watch": "0.1.x",
    "mongodb-uri": "0.9.x",
    "debug": "0.7.x"
  },
  "devDependencies": {
    "mocha": "*",
    "expect.js": "*",
    "mongoose": "3.6.x"
  },
  "readme": "# Mongo Live\n\n[![Build Status](https://travis-ci.org/cayasso/mongo-live.png?branch=master)](https://travis-ci.org/cayasso/mongo-live)\n[![NPM version](https://badge.fury.io/js/mongo-live.png)](http://badge.fury.io/js/mongo-live)\n\nListening to MongoDB live changes using oplog.\n\n## Instalation\n\n``` bash\n$ npm install mongo-live\n```\n\n## Usage\n\n``` javascript\nvar MongoLive = require('mongo-live');\nvar live = new MongoLive({\n  host: '127.0.0.1',\n  port: 27017,\n  database: 'blog'\n});\n\nvar posts = live\n.query('posts')\n.select('title body comments')\n.exec(function (error, stream) {\n\n  stream.on('data', function (data) {\n\n    if (error) {\n      // handle error\n      return;\n    }\n      \n    if ('insert' === data.operation) {\n      console.log('inserted', data);\n    }\n\n    if ('update' === data.operation) {\n      console.log('updated', data);\n    }\n\n    if ('remove' === data.operation) {\n      console.log('removed', data);\n    }\n\n    console.log('======== result ======>', data);\n\n  });\n\n});\n\n```\n\nYou can also listen to events like this:\n\n```javascript\nvar posts = live\n.query('posts')\n.select('title body')\n.exec();\n\nposts.on('insert', function(data){\n  console.log('inserted', data);\n});\n\nposts.on('update', function(data){\n  console.log('updated', data);\n});\n\nposts.on('remove', function(data){\n  console.log('removed', data);\n});\n\nposts.on('data', function(data){\n  if ('insert' === data.operation) {\n    console.log('inserted', data);\n  }\n\n  if ('update' === data.operation) {\n    console.log('updated', data);\n  }\n\n  if ('remove' === data.operation) {\n    console.log('removed', data);\n  }\n});\n```\n\nThen later any `find` query will be cached for 60 seconds.\n\nYou can also enable caching programatically by using the `cache` method directly from the query instance:\n\n``` javascript\nvar Person = mongoose.model('Person');\n\nPerson.find({ active: true })\n.cache(50000) // cache for 50 seconds\n.exec(function (err, docs) { /* ... */\n  \n  if (err) throw error;\n\n  console.log(docs.ttl) // time left for expiration in ms\n  console.log(docs.stored); // timestamp this query was cached\n  console.log(docs);\n\n});\n\n```\n\n## TODO\n\nAdd tests.\n\n## Credits\n\nThis module use [mongo-watcher](https://github.com/torchlightsoftware/mongo-watcher) for watching the mongodb oplog.\n\n## Run tests\n\n``` bash\n$ make test\n```\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2013 Jonathan Brumley &lt;cayasso@gmail.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/cayasso/mongo-live/issues"
  },
  "_id": "mongo-live@0.1.0",
  "dist": {
    "shasum": "94757656d1625df83e02e71483670fd1ff063bd6",
    "tarball": "http://registry.npmjs.org/mongo-live/-/mongo-live-0.1.0.tgz"
  },
  "_from": "mongo-live@*",
  "_npmVersion": "1.2.24",
  "_npmUser": {
    "name": "cayasso",
    "email": "cayasso@gmail.com"
  },
  "maintainers": [
    {
      "name": "cayasso",
      "email": "cayasso@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "94757656d1625df83e02e71483670fd1ff063bd6",
  "_resolved": "http://registry.npmjs.org/mongo-live/-/mongo-live-0.1.0.tgz"
}
